{"version":3,"sources":["NavBar/index.js","NavBar/NavBar.js","ExampleText/index.js","ExampleText/ExampleText.js","About/About.js","About/index.js","Home/Home.js","Home/index.js","ContentEditor/ContentEditor.js","ContentEditor/index.js","PageLoader/PageLoader.js","PageLoader/index.js","App/App.js","App/index.js","reportWebVitals.js","index.js"],"names":["NavBar","useState","selectedIndex","setSelectedIndex","Box","position","List","ListItem","ListItemButton","component","Link","to","selected","onClick","ListItemIcon","ListItemText","primary","ExampleText","url","paras","data","setData","useEffect","fetch","then","response","ok","text","stuff","dangerouslySetInnerHTML","__html","About","Divider","Home","contentsList","props","contents","textContent","split","map","line","title","level","length","content","slice","join","filter","e","heading","index","id","console","log","smooth","outputBox","converter","showdown","Converter","setFlavor","html","makeHtml","sx","width","ContentEditor","editState","setEditState","previewState","setPreviewState","setTextContent","templates","name","icon","display","minWidth","TextField","label","defaultValue","fullWidth","multiline","minRows","onChange","event","target","value","flexDirection","alignItems","gap","Tooltip","Fab","size","template","PageLoader","paddingRight","marginLeft","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b16c4c22.chunk.js","sourcesContent":["import NavBar from \"./NavBar\";\n\nexport default NavBar;\n","import {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport TimelineIcon from \"@mui/icons-material/Timeline\";\nimport MapIcon from \"@mui/icons-material/Map\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\nimport { Box } from \"@mui/system\";\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst NavBar = () => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  return (\n    <Box position=\"fixed\">\n      <List>\n        <ListItem>\n          <ListItemButton\n            component={Link}\n            to=\"/\"\n            selected={selectedIndex === 0}\n            onClick={() => setSelectedIndex(0)}\n          >\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem>\n          <ListItemButton\n            component={Link}\n            to=\"/timeline\"\n            selected={selectedIndex === 1}\n            onClick={() => setSelectedIndex(1)}\n          >\n            <ListItemIcon>\n              <TimelineIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Timeline\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem>\n          <ListItemButton\n            component={Link}\n            to=\"/maps\"\n            selected={selectedIndex === 2}\n            onClick={() => setSelectedIndex(2)}\n          >\n            <ListItemIcon>\n              <MapIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Maps\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem>\n          <ListItemButton\n            component={Link}\n            to=\"/about\"\n            selected={selectedIndex === 3}\n            onClick={() => setSelectedIndex(3)}\n          >\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem>\n          <ListItemButton\n            component={Link}\n            to=\"/content-editor\"\n            selected={selectedIndex === 4}\n            onClick={() => setSelectedIndex(4)}\n          >\n            <ListItemIcon>\n              <MenuBookIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Editor\" />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import ExampleText from \"./ExampleText\";\n\nexport default ExampleText;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst ExampleText = ({ paras }) => {\n  const url =\n    \"https://baconipsum.com/api/?type=all-meat-and-filler&paras=\" +\n    paras +\n    \"&start-with-lorem=1&format=html\";\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n      })\n      .then((stuff) => {\n        setData(stuff);\n      });\n  }, []);\n\n  return (\n    <div>\n      <p>\n        <div dangerouslySetInnerHTML={{ __html: data }}></div>\n      </p>\n    </div>\n  );\n};\n\nexport default ExampleText;\n","import { Divider } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport ExampleText from \"../ExampleText\";\n\nfunction About() {\n  return (\n    <Box>\n      <h1>About Page</h1>\n      <Divider />\n      <p>This section is about ...</p>\n      <ExampleText paras={20}></ExampleText>\n    </Box>\n  );\n}\n\nexport default About;\n","import About from \"./About\";\n\nexport default About;\n","import { Divider } from \"@mui/material\";\nimport ExampleText from \"../ExampleText\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Home Page</h1>\n      <Divider />\n      <ExampleText paras={5}></ExampleText>\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import { Divider, Fab, TextField, Tooltip } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport HelpCenterIcon from \"@mui/icons-material/HelpCenter\";\nimport PreviewIcon from \"@mui/icons-material/Preview\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport CastleIcon from \"@mui/icons-material/Castle\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport LandscapeIcon from \"@mui/icons-material/Landscape\";\nimport GroupsIcon from \"@mui/icons-material/Groups\";\nimport ChurchIcon from \"@mui/icons-material/Church\";\nimport JoinFullIcon from \"@mui/icons-material/JoinFull\";\n\nimport showdown from \"showdown\";\n\nimport { useState } from \"react\";\nimport { Link } from \"react-scroll\";\n\nconst inputBox = (props) => {\n  return (\n    <Box\n      sx={{\n        width: \"90%\",\n        minWidth: \"400px\",\n      }}\n    >\n      <TextField\n        label=\"Add markdown here\"\n        defaultValue={props.textContent}\n        fullWidth\n        multiline\n        minRows={10}\n        onChange={(event) => {\n          props.setTextContent(event.target.value);\n        }}\n      />\n    </Box>\n  );\n};\n\nconst contentsList = (props) => {\n  let contents = props.textContent.split(\"\\n\").map((line) => {\n    if (line[0] === \"#\") {\n      const title = line.split(\" \");\n      const level = title[0].length;\n      const content = title.slice(1).join(\" \");\n      return { level: level, content: content };\n    }\n  });\n  contents = contents.filter((e) => e != null);\n\n  return (\n    <Box>\n      <h2>Contents</h2>\n      {contents.map((heading, index) => {\n        const id = heading.content.split(\" \").join(\"-\");\n        console.log(id);\n        return (\n          <p key={index}>\n            <Link to={id} smooth={true}>\n              {heading.content}\n            </Link>\n          </p>\n        );\n      })}\n      <Divider />\n    </Box>\n  );\n};\n\nconst outputBox = (props) => {\n  const textContent = props.textContent;\n  var converter = new showdown.Converter();\n  converter.setFlavor(\"github\");\n  const html = converter.makeHtml(textContent);\n\n  return (\n    <Box sx={{ width: \"90%\" }}>\n      {contentsList({ textContent })}\n      <p>\n        <div dangerouslySetInnerHTML={{ __html: html }}></div>\n      </p>\n    </Box>\n  );\n};\n\nconst ContentEditor = () => {\n  const [editState, setEditState] = useState(true);\n  const [previewState, setPreviewState] = useState(false);\n  const [textContent, setTextContent] = useState(\"\");\n\n  const templates = [\n    { name: \"Settlement\", icon: <CastleIcon /> },\n    { name: \"NPC\", icon: <PersonIcon /> },\n    { name: \"Geographical Feature\", icon: <LandscapeIcon /> },\n    { name: \"Faction\", icon: <GroupsIcon /> },\n    { name: \"Religion\", icon: <ChurchIcon /> },\n    { name: \"Plane of Existence\", icon: <JoinFullIcon /> },\n  ];\n\n  return (\n    <Box>\n      <h1>Editor page</h1>\n      <Divider />\n      <p></p>\n      <Box display=\"flex\">\n        {editState\n          ? inputBox({\n              setEditState,\n              editState,\n              setTextContent,\n              textContent,\n            })\n          : outputBox({ textContent })}\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"10%\",\n            gap: \"20px\",\n            minWidth: \"70px\",\n          }}\n        >\n          <Tooltip title={editState ? \"Save\" : \"Edit\"}>\n            <Fab\n              size=\"small\"\n              onClick={() => {\n                if (editState) {\n                  setPreviewState(false);\n                }\n                setEditState(!editState);\n              }}\n            >\n              {editState ? <SaveIcon /> : <EditIcon />}\n            </Fab>\n          </Tooltip>\n          <Tooltip title=\"Live Preview\">\n            <Fab\n              size=\"small\"\n              onClick={() => {\n                setPreviewState(!previewState);\n              }}\n            >\n              <PreviewIcon />\n            </Fab>\n          </Tooltip>\n          <Tooltip title=\"Help\">\n            <Fab size=\"small\">\n              <HelpCenterIcon />\n            </Fab>\n          </Tooltip>\n          <Divider />\n          {/* TODO: make templates that trigger using the buttons below */}\n          {templates.map((template) => (\n            <Tooltip key={template.name} title={template.name}>\n              <Fab size=\"small\">{template.icon}</Fab>\n            </Tooltip>\n          ))}\n        </Box>\n        {previewState && outputBox({ textContent })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ContentEditor;\n","import ContentEditor from \"./ContentEditor\";\n\nexport default ContentEditor;\n","import { Box } from \"@mui/system\";\n\nimport { Route, Routes } from \"react-router-dom\";\nimport About from \"../About\";\nimport Home from \"../Home\";\nimport ContentEditor from \"../ContentEditor\";\n\nfunction PageLoader() {\n  return (\n    <Box\n      sx={{\n        paddingRight: \"30px\",\n        marginLeft: \"185px\", // must be updated if size of NavBar changes\n        width: \"100%\",\n      }}\n    >\n      <Routes>\n        {/* You must reboot local server when adding new routes */}\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/content-editor\" element={<ContentEditor />} />\n      </Routes>\n    </Box>\n  );\n}\n\nexport default PageLoader;\n","import PageLoader from \"./PageLoader\";\n\nexport default PageLoader;\n","import { Box } from \"@mui/system\";\nimport NavBar from \"../NavBar\";\nimport PageLoader from \"../PageLoader\";\n\nfunction App() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <NavBar />\n      <PageLoader />\n    </Box>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}